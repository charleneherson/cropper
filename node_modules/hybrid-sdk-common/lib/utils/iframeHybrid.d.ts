/**
 * FE通过scheme拦截的方式向native主动发送消息
 * 例如：<iframe src="iknowhybrid://toast?data={parmas: \"test\"}&__callback__=__cb__common__32423__2"></iframe>
 * 如果native收到消息后需要将处理结果回传给FE，
 * 通过调用FE发送消息时参数中携带的回调函数，
 * 这个回调函数挂载在window上面。
 * 例如：window.__cb__common__32423__2(res);
 */
export declare let hybrid: (action: any, params?: any, callback?: Function) => void;
/**
 * 创建hybrid 回调方法，为了兼容以前的接口，和win端的h5PluginAction,不能修改createHybrid
 * @param {Function} success  成功调用action
 * @param {Function} notFound 没有找到action
 */
export declare function createHybridCallback(success: Function, notFound: Function): (response: any) => void;
