// 获取url查询字符串
function getQueryString (name) {
  var reg = new RegExp('(^|&)' + name + '=([^&]*)(&|$)', 'i')
  var result = window.location.search.substr(1).match(reg) // 对querystring匹配目标参数
  if (result != null) {
    return decodeURIComponent(result[2])
  } else {
    return null
  }
}

// 判断对象是否为空
function isEmptyObject (obj) {
  var name
  for (name in obj) {
    return false
  }
  return true
}

// 是否是object
function isPlainObject (obj) {
  return Object.prototype.toString.call(obj) === '[object Object]'
}

function cleanArray (actual) {
  var newArray = []
  for (var i = 0, len = actual.length; i < len; i++) {
    if (actual[i]) {
      newArray.push(actual[i])
    }
  }
  return newArray
}

/**
 * json对象转成查询字符串
 * @param {Object} json
 */
function queryString (json) {
  if (!json) return ''
  return cleanArray(
    Object.keys(json).map(key => {
      if (json[key] === undefined) return ''
      return encodeURIComponent(key) + '=' + encodeURIComponent(json[key])
    })
  ).join('&')
}

function trim (x) {
  return x.replace(/^\s+|\s+$/gm, '')
}

// 生成guid
function guid () {
  return 'xxxxxxxx_xxxx_4xxx_yxxx_xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
    var r = (Math.random() * 16) | 0
    var v = c === 'x' ? r : (r & 0x3) | 0x8
    return v.toString(16)
  })
}

// export
export default {
  getQueryString,
  isEmptyObject,
  isPlainObject,
  queryString,
  trim,
  guid
}
