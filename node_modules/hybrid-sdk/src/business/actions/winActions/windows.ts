import Type from '../../../utils/type'
/*
*@descripion Windows 窗口通用接口
*/


declare global {
  interface Window {
    [propName: string]: any;
  }
}

/* 最小化窗口 */
export function winShrinkWindows () {
  if (typeof (window.ZCefClient) === 'undefined') {
    console.error('there no define zcef')
    return
  }
  window.ZCefClient.invokeMethod('Mini')
}

/* 最大化窗口 */
export function winEnlargeWindows () {
  if (typeof (window.ZCefClient) === 'undefined') {
    console.error('there no define zcef')
    return
  }
  window.ZCefClient.invokeMethod('Max')
}

/* 刷新 */
export function winRefresh () {
  if (typeof (window.ZCefClient) === 'undefined') {
    console.error('there no define zcef')
    return
  }
  window.ZCefClient.invokeMethod('ReloadPage')
}

/* 鼠标按下拖拽窗口 */
export function winDragWindows () {
  if (typeof (window.ZCefClient) === 'undefined') {
    console.error('there no define zcef')
    return
  }
  window.ZCefClient.invokeMethod('onDragAreaMouse')
}

/* 登录接口Login函数带有两个string参数电话号码 */
export function WinLogin (data: any) {
  if (typeof (window.ZCefClient) === 'undefined') {
    console.error('there no define zcef')
    return
  }

  if (!data || !data.phone) {
    console.error('login phone is undefined')
    return
  }

  window.ZCefClient.invokeMethod('Login', data.phone)
}

/** 登录退出接口 LoginExit */
export function WinLoginExit () {
  // LoginExit
  if (typeof (window.ZCefClient) === 'undefined') {
    console.error('there no define zcef')
    return
  }
  window.ZCefClient.invokeMethod('LoginExit')
}

/* 退出首页窗口 */
export function winExitHomePage () {
  if (typeof (window.ZCefClient) === 'undefined') {
    console.error('there no define zcef')
    return
  }
  window.ZCefClient.invokeMethod('ExitStudentInfo')
}

/* 进入直播教室调用 */
export function winEnterLiveRoom (data: any) {
  if (typeof (window.ZCefClient) === 'undefined') {
    console.error('there no define zcef')
    return
  }

  if (!data || !data.url) {
    console.error('url is undefined')
    return
  }
  window.ZCefClient.invokeMethod('GoClassRoom', data.url)
}

// 退出直播教室窗口
export function winExitLiveRoom () {
  if (typeof (window.ZCefClient) === 'undefined') {
    console.error('there no define zcef')
    return
  }
  window.ZCefClient.invokeMethod('ExitClassRoom')
}

/* 进入视频回放窗口 */
export function winEnterVedioReplay (data: any) {
  if (typeof (window.ZCefClient) === 'undefined') {
    console.error('there no define zcef')
    return
  }

  if (!data || !data.url) {
    console.error('url is undefined')
    return
  }
  window.ZCefClient.invokeMethod('GoVideoShow', data.url)
}

// 退出视频回放窗口
export function winExitVedioReplay () {
  if (typeof (window.ZCefClient) === 'undefined') {
    console.error('there no define zcef')
    return
  }
  window.ZCefClient.invokeMethod('VideoShowExit')
}

// 退出回放后显示标记
export function winExitReplayShow () {
  if (typeof (window.ZCefClient) === 'undefined') {
    console.error('there no define zcef')
    return
  }
  window.ZCefClient.invokeMethod('OnExitVideoShow')
}

/* 调用浏览器接口 */
var _retOpenUrlCallback: any = null
export function winOpenBrowser (data: any, callback: Function) {
  if (typeof (window.ZCefClient) === 'undefined') {
    console.error('there no define zcef')
    return
  }
  var { url } = data
  if (!url) {
    return
  }
  // 监听
  if (Type.isFunction(callback)) {
    if (_retOpenUrlCallback) {
      window.ZCefClient.removeEventListener('RetOpenUrl', _retOpenUrlCallback)
    }
    _retOpenUrlCallback = callback
    window.ZCefClient.addEventListener('RetOpenUrl', _retOpenUrlCallback)
  }

  window.ZCefClient.invokeMethod('OpenUrl', url)
}

// 窗口关闭拦截消息
export function listenWinCloseRoom (callback: Function) {
  if (typeof (window.ZCefClient) === 'undefined') {
    console.error('there no define zcef')
    return
  }

  // 监听
  if (Type.isFunction(callback)) {
    window.ZCefClient.addEventListener('CloseRoom', callback)
  }
}

export function removeListenWinCloseRoom (callback: Function) {
  if (typeof (window.ZCefClient) === 'undefined') {
    console.error('there no define zcef')
    return
  }

  // 监听
  if (Type.isFunction(callback)) {
    window.ZCefClient.removeEventListener('CloseRoom', callback)
  }
}
