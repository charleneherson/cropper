import Type from '../../../utils/type'

/* 是否支持护眼模式 */
var _isSupportEyeproCallback: any = null
export function winIsSupportEyeProtect (callback: Function) {
  if (typeof (window.ZCefClient) === 'undefined') {
    console.error('there no define zcef')
    return
  }

  if (typeof callback !== 'function') {
    console.error('callback is not function')
    return
  }

  if (Type.isFunction()) {
    // 返回是否支持，和是否首次使用护眼模式
    if (_isSupportEyeproCallback) {
      window.ZCefClient.removeEventListener('RetIsSupportEyepro', _isSupportEyeproCallback)
    }
    _isSupportEyeproCallback = callback
    window.ZCefClient.addEventListener('RetIsSupportEyepro', _isSupportEyeproCallback)
  }

  window.ZCefClient.invokeMethod('IsSupportEyepro')
}

/* 调用护眼模式 */
export function winEyeProtectMode (data: any) {
  if (typeof (window.ZCefClient) === 'undefined') {
    console.error('there no define zcef')
    return
  }
  var { mode, first, second, third } = data
  if (mode !== 'close' && mode !== 'open') {
    console.error('EyeProtect mode is not exist')
    return
  }
  if (mode === 'close') {
    window.ZCefClient.invokeMethod('EyeproMode', mode)// 为close时不需其他参数
  } else if (mode === 'open') {
    window.ZCefClient.invokeMethod('EyeproMode', mode, first, second, third)// 为close时不需其他参数
  }
}
