import Type from '../../../utils/type'

var _startUpdateCallback: any = null
// 开始升级更新
export function winStartUpdate (data: any, callback: Function) {
  if (typeof (window.ZCefClient) === 'undefined') {
    console.error('there no define zcef')
    return
  }
  var { url } = data
  if (!url) {
    return
  }
  // 注册监听
  if (Type.isFunction(callback)) {
    if (_startUpdateCallback) {
      window.ZCefClient.removeEventListener('UpdateDir', _startUpdateCallback)
    }
    _startUpdateCallback = callback
    window.ZCefClient.addEventListener('UpdateDir', _startUpdateCallback)
  }

  window.ZCefClient.invokeMethod('startUpdate', url)
}

// 下载完成
export function winEndUpdate () {
  if (typeof (window.ZCefClient) === 'undefined') {
    console.error('there no define zcef')
    return
  }
  window.ZCefClient.invokeMethod('endUpdate')
}

// 课中点击新功能后提示需要升级
export function winNeedUpdate () {
  if (typeof (window.ZCefClient) === 'undefined') {
    console.error('there no define zcef')
    return
  }

  window.ZCefClient.invokeMethod('NeedUpdate')
}

// 监听是否需要更新
export function listenNeedUpdate (callback: Function) {
  if (typeof (window.ZCefClient) === 'undefined') {
    console.error('there no define zcef')
    return
  }

  if (Type.isFunction(callback)) {
    window.ZCefClient.addEventListener('RetIsUpdate', callback)
  }
}

// 移除监听
export function removeListenNeedUpdate (callback: Function) {
  if (typeof (window.ZCefClient) === 'undefined') {
    console.error('there no define zcef')
    return
  }

  if (Type.isFunction(callback)) {
    window.ZCefClient.removeEventListener('RetIsUpdate', callback)
  }
}
