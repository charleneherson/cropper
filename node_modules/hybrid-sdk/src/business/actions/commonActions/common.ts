import {getIframePromiseFunc, resolveCallbackFactory, rejectCallbackFactory} from '../../../utils/tool'
/**
 * @description 获取公共参数
 * @param {Object} options
 *   @property {Function} callback 回调方法
 */
export function getCommonParameters (callback?: Function) {
  if (Object.prototype.toString.call(callback) !== '[object Function]') {
    console.error('callback is not function')
    return false
  }
  let success= resolveCallbackFactory(callback);
  let fail= rejectCallbackFactory(callback);
  return getIframePromiseFunc("common").then(success, fail);
}

/**
 * @description 学分更新
 *
 * @export
 * @returns
 */
interface scoreUpdateParams {
  success?: Function;
  notFound?: Function;
}
export function scoreUpdate (options: scoreUpdateParams = {}) {
  var { success, notFound } = options;
  let _success= resolveCallbackFactory(success);
  let _fail= rejectCallbackFactory(notFound);
  return getIframePromiseFunc("scoreUpdate").then(_success, _fail);
}
