import { hybrid, createHybridCallback } from '../../../utils/iframeHybrid'

// http://qatest7.suanshubang.com/static/fe-docs/_book/hybrid-sdk/all.html

/**
 * @description 打电话
 * @param {Object} phone //电弧
 */
export function callPhoneKeyboard (data: any) {
  if (!data || !data.phone) {
    console.error('phone is undefined')
    return
  }
  hybrid('dial', data)
}

/**
 * @description 取得用户在主live页所选的年级,默认为初中20
 * @param {String} callback
 */
export function getSelectGrade (callback: Function) {
  if (typeof callback !== 'function') {
    console.error('callback is not a function')
    return
  }

  hybrid('getSelectGrade', callback)
}

/**
 * @description 手机键盘弹起时候，调用，防止input文本框被盖住
 */
export function setInputPositionOnFocus () {
  hybrid('setSoftInputResize')
}

/**
 * @description 复制到剪贴板
 * @param {Object} options
 */
export function copyToClipboard (options: any) {
  if (!options || !options.content) {
    console.error('content is undefined')
    return false
  }
  hybrid('copyToClipboard', options)
}

/**
 * @description 存储内存数据，平台使用
 * @param {Function} callback
 */
export function setMemory (data: any) {
  if (!data || !data.key) {
    console.error('key is undefined')
    return
  }
  // 构造参数
  var parameters = {
    op: 'set',
    k: data.key,
    v: data.value,
    g: data.global
  }

  hybrid('memData', parameters)
}

/**
 * @description 提取内存数据，平台使用
 * @param {Function} callback
 */
export function getMemory (data: any, callback: Function) {
  if (!data || !data.key) {
    console.error('key is undefined')
    return
  }
  if (typeof callback !== 'function') {
    console.error('callback is not function')
    return false
  }
  // 构造参数
  var parameters = {
    op: 'get',
    k: data.key,
    g: data.global
  }

  hybrid('memData', parameters, callback)
}

/**
 * @description 通用跳转action
 * @param {String} protocol //协议
 */
export function commonJumpPage (data: any) {
  if (!data || !data.url) {
    console.error('protocol is undefined')
    return
  }

  var parameter = {
    protocolString: data.url
  }

  hybrid('APPJumpProtocol', parameter) // { protocolString: url }
}

/**
 * @description 跳转到绑定电话页面
 * @param {Function} callback //回调函数 isBind
 */
export function gotoBindPhone (callback: Function) {
  if (Object.prototype.toString.call(callback) !== '[object Function]') {
    console.error('callback is not function')
    return
  }
  hybrid('goBindPhone', callback)
}

// enterModiTest

/**
 * @description 售卖页进入摸底测试
 * @param {Object} options
 */
export function enterTest (options: any) {
  hybrid('enterModiTest', options)
}

/**
 * @description 是否是wifi
 * @param {Function} callback
 */
export function isWifi (callback: Function) {
  if (Object.prototype.toString.call(callback) !== '[object Function]') {
    console.error('callback is not function')
    return false
  }
  hybrid('isWIFI', callback)
}

/**
 * @description FE页面加载完成通知端上  （h5插件规范必须实现）
 */
export function pageLoadingComplete () {
  hybrid('pageLoadingComplete')
}

/**
 * @description: 检查是否存在某个app
 * @param {object}
 * @return:
 */
export function liveOpenApp (options: any = {}) {
  if (!hybrid) {
    console.error('hybrid is undefined')
    return
  }

  var { data, success, notFound } = options
  if (!data || !data.packageName) {
    console.error('packageName is required!')
    return
  }
  var callback = createHybridCallback(success, notFound)
  hybrid('liveOpenApp', data, callback)
}
