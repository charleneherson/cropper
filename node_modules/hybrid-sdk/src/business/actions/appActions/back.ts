import { hybrid } from '../../../utils/iframeHybrid'
import { isInApp, production, UNKNOW } from '../../../utils/system'

/**
 *http://qatest7.suanshubang.com/static/fe-docs/_book/hybrid-sdk/app_window.html
 *
 */

/**
 *手动点击端的返回时,通过这个API通知端不执行返回操作,forbidBack:true
 * @export
 * @param {Function} callback app回调函数
 * @returns {object}  {}  空对象
 */
export function disableBack (callback: Function) {
  var data = {
    forbidBack: true
  }
  hybrid('webCacheForbidBack', data, callback)
}

/**
 *手动点击端的返回时,通过这个API通知端执行返回操作,重置forbidBack为false
 * @export
 * @param  {Function} callback
 * @returns {object}  {}  空对象
 */
export function ableBack (callback: Function) {
  var data = {
    forbidBack: false
  }

  hybrid('webCacheForbidBack', data, callback)
}

/**
 *进入一个webview,点击按钮退出这个webview,触发返回操作
 *
 * @export
 * @param {object} option
 *  @property {boolean} exit 为true直接退出当前webwiew返回上一级webwiew;为false按照fe的push路由一层一层返回;
 */
/**
 *进入一个webview,点击按钮退出这个webview,触发返回操作
 *
 * @export
 * @param {object} option
 *  @property {boolean} exit 为true直接退出当前webwiew返回上一级webwiew;为false按照fe的push路由一层一层返回;
 */
export function goBack (option: any = {}) {
  let { exit, noteach } = option
  let finishPage = exit === true ? 1 : 0
  var handleHybrid = isInApp
    ? hybrid
    : production === UNKNOW
      ? ''
      : window.parent.h5PluginAction
  if (!handleHybrid) {
    console.error('hybrid is undefined')
    return
  }
  if (noteach) {
    // 非教学=>平台和售卖
    handleHybrid('exit', { finishPage: finishPage }); // 1:直接结束，0：不是直接结束
  } else {
    handleHybrid('webCacheFinishPage', { finishPage: finishPage }); // 1:直接结束，0：不是直接结束
    handleHybrid('closeWebCacheVc');
  }
}

/**
 * @description 重置物理键返回方式
 * @param {*} mode 为true直接退出当前webwiew返回上一级webwiew;为false按照fe的push路由一层一层返回;
 */
export function setBackMode (mode = false) {
  var handleHybrid = isInApp
    ? hybrid
    : production === UNKNOW
      ? ''
      : window.parent.h5PluginAction
  if (!handleHybrid) {
    console.error('hybrid is undefined')
    return
  }
  handleHybrid('webCacheFinishPage', { finishPage: mode ? 1 : 0 }) // 1:直接结束，0：不是直接结束
}
