/**
 *
 * @param obj 删除对象中的undefined
 */
export declare function deleteEmptyKeyFromObject(obj: Object): Object;
export declare function getQueryString(name: any): string;
export declare function isEmptyObject(obj: any): boolean;
export declare function isPlainObject(obj: any): boolean;
export declare function cleanArray(actual: any): any[];
/**
 * json对象转成查询字符串
 * @param {Object} json
 */
export declare function queryString(json: any): string;
export declare function trim(x: any): any;
export declare function guid(): string;
export declare function resolveCallbackFactory(callback?: Function): (res: any) => Promise<any>;
export declare function rejectCallbackFactory(callback?: Function): (res: any) => Promise<never>;
export declare function getMergedCallback(success?: Function, fail?: Function): Function;
export declare function callbackPromiseFactory(hybrid: any, action: string, params?: any): Promise<unknown>;
export declare function getPromiseFunc(action: string, params?: any): Promise<unknown>;
export declare function getIframePromiseFunc(action: string, params?: any): Promise<unknown>;
export declare function logEntry(): void;
export declare function addLog(log: string): void;
declare const _default: {
    getQueryString: typeof getQueryString;
    isEmptyObject: typeof isEmptyObject;
    isPlainObject: typeof isPlainObject;
    queryString: typeof queryString;
    trim: typeof trim;
    guid: typeof guid;
    getMergedCallback: typeof getMergedCallback;
};
export default _default;
