import { EventEmitter } from "../yaya-common/event-emitter";

/**
 * 场景抽象基类
 */
export class Scene extends EventEmitter {
  /**
   *
   * @param {*} raw
   */
  constructor(raw) {
    super();
    this.raw = null;
    this.isAlive = true;
    this.payload = {};
    this.raw = raw;
    this.id = raw.id;
    this.type = raw.type;
    this.data = raw;
    this.actions = raw.actions;
  }
  /**
   * 开始
   * @param {*} payload
   */
  start(payload) {
    this.emit("start");
    const previousPayload = this.payload;
    this.payload = payload;
    this.emit("update", payload, previousPayload);
  }
  onStart(handler) {
    this.on("start", handler);
  }
  /**
   * 暂停
   * @param {*} payload
   */
  pause(payload) {
    this.emit("pause", payload);
  }
  onPause(handler) {
    this.on("pause", handler);
  }
  /**
   * 停止
   */
  stop() {
    this.emit("stop");
  }
  onStop(handler) {
    this.on("stop", handler);
  }
  /**
   * 恢复
   * @param {*}} payload
   */
  resume(payload) {
    this.emit("resume", payload);
  }
  onResume(handler) {
    this.on("resume", handler);
  }
  /**
   * 更新
   * @param {*} payload
   */
  update(payload) {
    const previousPayload = this.payload;
    this.payload = payload;
    this.emit("update", payload, previousPayload);
  }
  onUpdate(handler) {
    this.on("update", handler);
  }
  /**
   * 销毁
   */
  destroy() {
    this.emit("destroy");
    super.destroy();
  }
  onDestroy(handler) {
    this.on("destroy", handler);
  }
  act(action) {
    this.director.doAction(action);
  }
}
