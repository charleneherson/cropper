import { __assign } from "tslib";
import { Env } from '../core/config';
import StatsMain from '../core';
import { StatsPlatformH5Zb } from './platform';
import { D } from '../core/debug';
import { StatsPage } from './page';
var global = window;
var logUrlDev = 'https://nlogtj.zuoyebang.cc/nlogtj/h5_test';
var logUrlProd = 'https://nlogtj.zuoyebang.cc/nlogtj/h5';
var ZybStats = /** @class */ (function () {
    function ZybStats() {
        this.cfg = {};
        this.sm = new StatsMain({ platform: new StatsPlatformH5Zb() }, this.cfg);
        this.$page = new StatsPage(this.sm);
        this.$page.init();
    }
    /**
     * 更新配置
     * @param config
     */
    ZybStats.prototype.config = function (config) {
        if (!config.logUrl) {
            switch (config.env) {
                case Env.Dev:
                    config.logUrl = logUrlDev;
                    break;
                case Env.Prod:
                    config.logUrl = logUrlProd;
                    break;
                default:
                    config.logUrl = logUrlProd;
                    break;
            }
        }
        this.cfg = __assign(__assign({}, this.cfg), config);
        this.sm.$config.set(config);
        this.sm.$dm.setGlobal({ plat: this.cfg.plat, zpID: this.cfg.zpID });
    };
    /**
     * 设置、更新全局变量
     * @param params
     */
    ZybStats.prototype.global = function (params) {
        this.sm.$dm.setGlobal(params);
    };
    /**
     * 设置openid=》cuid
     * @param openid
     */
    ZybStats.prototype.setCuid = function (openid, updateStore) {
        if (updateStore === void 0) { updateStore = true; }
        var _a;
        this.global({ i: openid });
        if (updateStore) {
            (_a = this.sm.$platform) === null || _a === void 0 ? void 0 : _a.setStore('cuid', openid);
        }
    };
    /**
     * 获取 cuid
     */
    ZybStats.prototype.getCuid = function () {
        var _a;
        return (_a = this.sm.$platform) === null || _a === void 0 ? void 0 : _a.getStore('cuid');
    };
    /**
     * 设置登陆用户id（作业帮用户id，加密）
     * @param uid
     */
    ZybStats.prototype.login = function (uid, updateStore) {
        if (uid === void 0) { uid = '-1'; }
        if (updateStore === void 0) { updateStore = true; }
        var _a;
        this.global({ paid: uid });
        if (updateStore) {
            (_a = this.sm.$platform) === null || _a === void 0 ? void 0 : _a.setStore('uid', uid);
        }
    };
    /**
     * 初始化
     */
    ZybStats.prototype.init = function () {
        D.log('全埋点SDK初始化');
        this.sm.init();
        var platform = this.sm.$platform;
        var openid = platform.getStore('cuid');
        var uid = platform.getStore('uid');
        if (openid) {
            this.setCuid(openid, false);
        }
        if (uid) {
            this.login(uid, false);
        }
    };
    /**
     * 主动埋点方法
     * @param name 点位名字
     * @param params 点位参数
     */
    ZybStats.prototype.track = function (name, params) {
        return this.sm.track(name, params);
    };
    /**
     * 页面呈现主动埋点
     */
    ZybStats.prototype.pageShow = function (url, rule) {
        this.$page.parseUrl(url);
        if (rule) {
            this.$page.setRouteRule(rule);
        }
        return this.$page.onShow();
    };
    /**
     * 页面隐藏主动埋点
     */
    ZybStats.prototype.pageHide = function (url, rule) {
        this.$page.parseUrl(url);
        if (rule) {
            this.$page.setRouteRule(rule);
        }
        return this.$page.onHide();
    };
    return ZybStats;
}());
export var zs = new ZybStats();
//# sourceMappingURL=index.js.map