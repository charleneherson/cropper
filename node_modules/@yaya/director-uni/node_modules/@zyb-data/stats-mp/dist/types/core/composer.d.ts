import { ProjectConfigDetail, Rule, EventData, DataPage, BuiltInName } from '@zyb-data/stats-core';
import { StatsPlatform } from './platform';
import { StatsDataPoolManager } from './data-pool';
import { StatsLogger } from './logger';
import { StatsConfigService } from './config';
import { StatsReady } from './ready';
/**
 * 规则索引表
 * 为提高规则匹配效率和减少不必要的数据进入数据池
 * 以页面和事件类型作为一二级索引
 * 能获取需要进行检查的事件id和对应id需要进行判断的规则列表
 */
interface StatasRulesMap {
    [pid: string]: {
        [et: string]: {
            ids: Set<string>;
            rules: Map<string, Array<Rule>>;
        };
    };
}
interface BuiltInData {
    name: BuiltInName;
    pageUUID?: string;
    scene?: number;
    event_duration?: number;
}
/**
 * StatsComposer
 * 规则处理器
 */
export declare class StatsComposer {
    private platform;
    private dm;
    private logger;
    private config;
    configDetails: ProjectConfigDetail;
    /**
     * 预处理后的规则索引表
     */
    rulesMap: StatasRulesMap;
    /**
     * ready 方法，一些地方需要等composer ready
     */
    composerReady: StatsReady;
    /**
     *
     * @param platform 平台实例
     * @param dm 数据服务
     * @param logger 日志服务
     * @param config 配置服务
     */
    constructor(platform: StatsPlatform, dm: StatsDataPoolManager, logger: StatsLogger, config: StatsConfigService);
    get ready(): (fn: Function) => void;
    /**
     * 更新配置
     */
    update(): void;
    /**
     * 获取可能命中规则的id列表
     * @param pid 页面id
     * @param et 事件类型
     */
    getSuspecteds(pid: string, et: string): string[];
    /**
     * 判断事件id是否可能命中规则
     * @param pid 页面id
     * @param et 事件类型
     * @param eid 事件id
     */
    isSuspected(pid: string, et: string, eid: string): boolean;
    /**
     * 处理内置事件
     * 内置事件无需匹配规则
     * @param data 内置事件参数
     * @param cp 页面数据上下文
     */
    composeBuiltin(data: BuiltInData, cp?: DataPage): void;
    /**
     * 处理事件数据，进行规则匹配
     * 遍历所有命中规则进行匹配处理
     * @param data 事件数据
     * @param cp 产生当前事件的页面数据上下文
     */
    compose(data: EventData, cp: DataPage): void;
    /**
     * 单条规则的匹配
     * @param data 事件数据
     * @param rule 规则
     * @param cp 产生当前事件的页面数据上下文
     */
    private handleRule;
    /**
     * 比较方法
     * @param a 值a
     * @param b 值b，值b会声明类型，详见 {@link Value} 类型
     * @param c 比较符
     */
    private compare;
    /**
     * 预处理规则，以提高规则索引速度和提供数据池过滤依据
     *
     * @param configs 远程配置完整内容
     */
    private preprocessRules;
}
export {};
